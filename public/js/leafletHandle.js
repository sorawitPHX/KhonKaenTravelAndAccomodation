// ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function editPlace(type, id) {
    let res = await fetch(`/api/${type}?id=${id}`);
    let place = await res.json();
    place = place[0]

    $('#placeId').val(id);
    $('#placeName').val(place.name);
    $('#placeAddress').val(place.address);
    $('#placeOpeningHours').val(place.openingHours);
    $('#placePhotos').val(place.photos);
    $('#placeType').val(type);
    $('#placeLat').val(place.latitude);
    $('#placeLng').val(place.longitude);
    updateExtraFields(type);

    $('#placeCategory').val(place.category);

    if (type === 'accommodation') {
        $('#placePhone').val(place.phoneNumber);
        $('#placeWebsite').val(place.website);
        $('#placePrice').val(place.price);
    }

    $('#placeModalLabel').text('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà');
    $('#placeModal').modal('show');
}

function updateExtraFields(type) {
    let extraFields = $('#extraFields');
    extraFields.empty();

    if (type === 'tourism') {
        extraFields.append(`
        <div class="mb-3">
            <label for="placeCategory" class="form-label">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</label>
            <select class="form-select" id="placeCategory" name="category">
                <option value="‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞">‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞</option>
                <option value="‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå">‡∏û‡∏¥‡∏û‡∏¥‡∏ò‡∏†‡∏±‡∏ì‡∏ë‡πå</option>
                <option value="‡∏ß‡∏±‡∏î">‡∏ß‡∏±‡∏î</option>
                <option value="‡∏™‡∏ß‡∏ô‡∏ô‡πâ‡∏≥">‡∏™‡∏ß‡∏ô‡∏ô‡πâ‡∏≥</option>
                <option value="‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏∞‡∏ö‡∏π‡∏ä‡∏≤">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏∞‡∏ö‡∏π‡∏ä‡∏≤</option>
                <option value="‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà">‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà</option>
                <option value="‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå">‡∏™‡∏ß‡∏ô‡∏™‡∏±‡∏ï‡∏ß‡πå</option>
                <option value="‡∏≠‡∏ô‡∏∏‡∏™‡∏£‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô">‡∏≠‡∏ô‡∏∏‡∏™‡∏£‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô</option>
                <option value="‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥">‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥</option>
                <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
            </select>
        </div>
    `);
    } else {
        extraFields.append(`
        <div class="mb-3">
            <label for="placePhone" class="form-label">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
            <input type="text" class="form-control" id="placePhone" name="phoneNumber">
        </div>
        <div class="mb-3">
            <label for="placeWebsite" class="form-label">‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
            <input type="text" class="form-control" id="placeWebsite" name="website">
        </div>
        <div class="mb-3">
            <label for="placePrice" class="form-label">‡∏£‡∏≤‡∏Ñ‡∏≤</label>
            <input type="number" class="form-control" id="placePrice" name="price">
        </div>
        <div class="mb-3">
            <label for="placeCategory" class="form-label">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</label>
            <select class="form-select" id="placeCategory" name="category">
                <option value="‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°">‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°</option>
                <option value="‡∏£‡∏µ‡∏™‡∏≠‡∏£‡πå‡∏ó">‡∏£‡∏µ‡∏™‡∏≠‡∏£‡πå‡∏ó</option>
                <option value="‡πÇ‡∏Æ‡∏™‡πÄ‡∏ó‡∏•">‡πÇ‡∏Æ‡∏™‡πÄ‡∏ó‡∏•</option>
                <option value="‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏°‡∏ô‡∏ó‡πå">‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏°‡∏ô‡∏ó‡πå</option>
                <option value="‡πÅ‡∏Ñ‡∏°‡∏õ‡πå‡∏õ‡∏¥‡πâ‡∏á">‡πÅ‡∏Ñ‡∏°‡∏õ‡πå‡∏õ‡∏¥‡πâ‡∏á</option>
                <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
            </select>
        </div>
    `);
    }
}

async function deletePlace(type, id) {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ?')) {
        return;
    }

    let res = await fetch(`/api/${type}/${id}`, {
        method: 'DELETE'
    });

    if (res.ok) {
        alert('‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        location.reload();
    } else {
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà');
    }
}

async function openReviewModal(type, placeId) {
    document.getElementById("reviewPlaceId").value = placeId;
    document.getElementById("reviewType").value = type;

    let res = await fetch(`/api/reviews/${type}/${placeId}`);
    let reviews = await res.json();

    // ‡∏î‡∏∂‡∏á userId ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
    let userRes = await fetch("/api/auth/current-user");
    let userData = await userRes.json();
    let currentUserId = userData?.id;
    let currentUserRole = userData?.role;

    let reviewHtml = reviews.map(review => {
        let userLiked = review.reviewLikes.some(like => like.userId === currentUserId);
        let btnClass = userLiked ? "btn-primary" : "btn-light"; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏•‡∏Å‡πå‡πÅ‡∏•‡πâ‡∏ß

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        let deleteButton = (review.userId === currentUserId || currentUserRole == 'admin') ? `
            <button class="btn btn-danger btn-sm" onclick="deleteReview(${review.id})">
                ‡∏•‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
            </button>
        ` : '';

        return `
            <div class="card p-2 mb-2">
                <strong>${review.user.name}</strong> ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‚≠ê${review.rating}
                <p>${review.comment}</p>
                <div class='text-end'>
                    <button class="btn ${btnClass} btn-sm" onclick="likeReview(${review.id}, this)">
                        üëç ${review.reviewLikes.length}
                    </button>
                    ${deleteButton}
                </div>
            </div>
        `;
    }).join('');

    document.getElementById("reviewsList").innerHTML = reviewHtml || "<p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</p>";
    new bootstrap.Modal(document.getElementById("reviewModal")).show();
}

async function deleteReview(reviewId) {
    Notiflix.Confirm.show(
        '‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
        '‡πÉ‡∏ä‡πà',
        '‡πÑ‡∏°‡πà',
        async () => {
            let res = await fetch(`/api/reviews/${reviewId}`, { method: "DELETE" });
            if (res.ok) {
                Notiflix.Report.success(
                    '‡∏•‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
                    '',
                    '‡∏ï‡∏Å‡∏•‡∏á',
                    () => {
                        let modal = bootstrap.Modal.getInstance(document.getElementById("reviewModal"));
                        if (modal) modal.hide(); // ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
                        setTimeout(() => openReviewModal(document.getElementById("reviewType").value, document.getElementById("reviewPlaceId").value), 300); // ‡∏£‡∏≠ modal ‡∏õ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà
                    }
                )

            } else {
                if (res.status == 403) {
                    Notiflix.Report.info(
                        '‡πÇ‡∏õ‡∏£‡∏î‡∏ó‡∏£‡∏≤‡∏ö',
                        '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
                        '‡∏ï‡∏Å‡∏•‡∏á',
                        () => {
                            window.location.href = '/signIn'
                        }
                    )
                } else {
                    Notiflix.Report.failure(
                        '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                        `${data.error}`,
                        '‡∏ï‡∏Å‡∏•‡∏á',
                    )
                }
            }
        },
        () => {

        },
    );
}


async function submitReview() {
    let placeId = document.getElementById("reviewPlaceId").value;
    let type = document.getElementById("reviewType").value;
    let rating = document.getElementById("reviewRating").value;
    let comment = document.getElementById("reviewComment").value;

    let res = await fetch("/api/reviews", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ type, placeId, rating, comment })
    });

    if (res.ok) {
        Notiflix.Report.success(
            '‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß',
            '',
            '‡∏ï‡∏Å‡∏•‡∏á',
            () => {
                let modal = bootstrap.Modal.getInstance(document.getElementById("reviewModal"));
                if (modal) modal.hide(); // ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
                setTimeout(() => openReviewModal(type, placeId), 300); // ‡∏£‡∏≠ modal ‡∏õ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà
            }
        )

    } else {
        if (res.status == 403) {
            Notiflix.Report.info(
                '‡πÇ‡∏õ‡∏£‡∏î‡∏ó‡∏£‡∏≤‡∏ö',
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
                '‡∏ï‡∏Å‡∏•‡∏á',
                () => {
                    window.location.href = '/signIn'
                }
            )
        } else {
            Notiflix.Report.failure(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                `${data.error}`,
                '‡∏ï‡∏Å‡∏•‡∏á',
            )
        }
    }
}

async function likeReview(reviewId) {
    let res = await fetch(`/api/reviews/${reviewId}/like`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ reviewId })
    });

    if (res.ok) {
        let modal = bootstrap.Modal.getInstance(document.getElementById("reviewModal"));
        if (modal) modal.hide();
        setTimeout(() => openReviewModal(document.getElementById("reviewType").value, document.getElementById("reviewPlaceId").value), 300);
    } else {
        if (res.status == 403) {
            Notiflix.Report.info(
                '‡πÇ‡∏õ‡∏£‡∏î‡∏ó‡∏£‡∏≤‡∏ö',
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
                '‡∏ï‡∏Å‡∏•‡∏á',
                () => {
                    window.location.href = '/signIn'
                }
            )
        } else {
            Notiflix.Report.failure(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                `${data.error}`,
                '‡∏ï‡∏Å‡∏•‡∏á',
            )
        }
    }
}

async function getCurrentUser() {
    const res = await fetch('/api/auth/current-user')
    const user = await res.json()
    if (res.ok && user) {
        return user
    }
}

$(document).ready(async () => {
    Notiflix.Loading.hourglass();
    const user = await getCurrentUser()
    // console.log(user)
    let map = L.map('map', {
        zoomControl: false  // ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° Zoom ‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°
    }).setView([16.468218482217885, 102.6308571861837], 9);

    let osm = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 20,
        attribution: '&copy; <a href="/">‡∏Æ‡πâ‡∏≠‡∏Å‡∏Å‡∏µ‡πâ‡∏™‡∏µ‡∏ä‡∏°‡∏†‡∏π</a>'
    }).addTo(map);

    let Stadia_AlidadeSatellite = L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_satellite/{z}/{x}/{y}{r}.{ext}', {
        minZoom: 0,
        maxZoom: 20,
        attribution: '&copy; <a href="/">‡∏Æ‡πâ‡∏≠‡∏Å‡∏Å‡∏µ‡πâ‡∏™‡∏µ‡∏ä‡∏°‡∏†‡∏π</a>',
        ext: 'jpg'
    });

    let baseMaps = {
        "OpenStreetMap": osm,
        "‡∏†‡∏≤‡∏û‡∏ñ‡πà‡∏≤‡∏¢‡∏î‡∏≤‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏°": Stadia_AlidadeSatellite
    };

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á LayerGroup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏à‡∏∏‡∏î Marker
    let tourismLayer = L.layerGroup().addTo(map);  // ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÅ‡∏£‡∏Å
    let accommodationLayer = L.layerGroup().addTo(map);  // ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÅ‡∏£‡∏Å
    let khonkaenLayer = L.layerGroup().addTo(map)
    let allMarkers = []; // ‡πÄ‡∏Å‡πá‡∏ö Marker ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Layer ‡∏•‡∏á‡πÉ‡∏ô control panel
    let overlayMaps = {
        "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß": tourismLayer,
        "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å": accommodationLayer,
        "‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô": khonkaenLayer
    };

    L.control.zoom({ position: 'bottomleft' }).addTo(map);
    let layerControl = L.control.layers(baseMaps, overlayMaps, { position: 'bottomright' }).addTo(map);

    // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
    if (user?.role == 'admin') {
        map.on('click', function (e) {
            let { lat, lng } = e.latlng;

            $('#placeId').val('');
            $('#placeName').val('');
            $('#placeAddress').val('');
            $('#placeOpeningHours').val('');
            $('#placePhotos').val('');
            $('#placeType').val('tourism');
            $('#placeLat').val(lat);
            $('#placeLng').val(lng);

            updateExtraFields('tourism'); // ‡πÇ‡∏´‡∏•‡∏î fields ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            $('#placeModalLabel').text('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà');
            $('#placeModal').modal('show');
        });
    }

    // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô fields ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    $('#placeType').change(function () {
        updateExtraFields($(this).val());
    });



    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
    $('#placeForm').submit(async function (e) {
        e.preventDefault();

        let id = $('#placeId').val();
        let type = $('#placeType').val();
        let url = id ? `/api/${type}/${id}` : `/api/${type}`;
        let method = id ? 'PUT' : 'POST';

        let placeData = {
            name: $('#placeName').val(),
            address: $('#placeAddress').val(),
            openingHours: $('#placeOpeningHours').val(),
            photos: $('#placePhotos').val(),
            lat: parseFloat($('#placeLat').val()),
            long: parseFloat($('#placeLng').val()),
            category: $('#placeCategory').val()
        };
        if (type === 'accommodation') {
            placeData.phoneNumber = $('#placePhone').val();
            placeData.website = $('#placeWebsite').val();
            placeData.price = $('#placePrice').val() ? parseInt($('#placePrice').val()) : null;
        }

        console.log(placeData)
        let res = await fetch(url, {
            method: method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(placeData)
        });

        if (res.ok) {
            $('#placeModal').modal('hide');
            alert(id ? '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            location.reload();
        } else {
            alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
        }
    });


    async function loadTourism() {
        const res = await fetch('/api/tourism');
        const data = await res.json();
        if (res.ok) {
            console.log('tourism', data);
            if (data.length !== 0) {
                data.forEach((place) => {
                    var icon = L.icon({
                        iconUrl: `/images/‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß/${place.category}.png`,
                        iconSize: [32, 32],
                        iconAnchor: [16, 32],
                        popupAnchor: [0, -32]
                    });

                    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Marker ‡πÄ‡∏Ç‡πâ‡∏≤ Layer Group
                    const modifyContainer = user?.role == 'admin' ?
                        `<div class='col-12 d-flex justify-content-center gap-2'>
                                        <button class="btn btn-warning btn-sm" onclick="editPlace('tourism', ${place.id})">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                                        <button class="btn btn-danger btn-sm" onclick="deletePlace('tourism', ${place.id})">‡∏•‡∏ö</button>
                                    </div>
                                    <hr class='my-2'>
                                    ` : ''
                    let marker = L.marker([place.latitude, place.longitude], { icon: icon })
                        .bindPopup(`
                            <div class="container-fluid">
                                <div class="row">
                                    ${modifyContainer}
                                    
                                    <div class="col-12">
                                        <h5 class="popup-header fw-bold">${place.name}</h5>
                                        <p><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> ${place.category}</p>
                                        <p><strong>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:</strong> ${place.openingHours}</p>
                                        <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ${place.address ? place.address : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
                                    </div>
                                    <div class="col-12">
                                        <a href="${place.photos}" data-fancybox="gallery" data-caption="${'‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ' + place.name}">
                                            <img src="${place.photos}" class="img-thumbnail" alt="Click to view larger image">
                                        </a>
                                    </div>
                                    <hr class='my-2'>
                                    <div class="col text-center">
                                        <button class="btn btn-info" onclick="openReviewModal('tourism', ${place.id})">‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</button>
                                    </div>
                                </div>
                            </div>
                        `).addTo(tourismLayer); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Layer Group
                    allMarkers.push({ marker, name: place.name, type: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', icon: '‚úàÔ∏è' });
                });
            } else {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß');
            }
        } else {
            alert('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        }
    }

    async function loadAccommodation() {
        const res = await fetch('/api/accommodation');
        const data = await res.json();
        if (res.ok) {
            console.log('accomodation', data);
            if (data.length !== 0) {
                data.forEach((place) => {
                    var icon = L.icon({
                        iconUrl: '/images/‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å/type/0star.png',
                        iconSize: [32, 32],
                        iconAnchor: [16, 32],
                        popupAnchor: [0, -32]
                    });

                    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Marker ‡πÄ‡∏Ç‡πâ‡∏≤ Layer Group
                    const modifyContainer = user?.role == 'admin' ?
                        `<div class='col-12 d-flex justify-content-center gap-2'>
                                        <button class="btn btn-warning btn-sm" onclick="editPlace('accommodation', ${place.id})">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                                        <button class="btn btn-danger btn-sm" onclick="deletePlace('accommodation', ${place.id})">‡∏•‡∏ö</button>
                                    </div>
                                    <hr class='my-2'>
                                    ` : ''
                    let marker = L.marker([place.latitude, place.longitude], { icon: icon })
                        .bindPopup(`
                            <div class="container-fluid">
                                <div class="row">
                                    ${modifyContainer}
                                    <div class="col-12">
                                        <h5 class="popup-header fw-bold">${place.name}</h5>
                                        <p><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> ${place.category}</p>
                                        <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> ${place.price} ‡∏ö‡∏≤‡∏ó</p>
                                        <p><strong>‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£:</strong> ${place.openingHours}</p>
                                        <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</strong> ${place.phoneNumber}</p>
                                        <p><strong>‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:</strong> ${place.website ? place.website : '‡πÑ‡∏°‡πà‡∏û‡∏ö'}</p>
                                        <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ${place.address ? place.address : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
                                    </div>
                                    <div class="col-12">
                                        <a href="${place.photos}" data-fancybox="gallery" data-caption="${'‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ' + place.name}">
                                            <img src="${place.photos}" class="img-thumbnail" alt="Click to view larger image">
                                        </a>
                                    </div>
                                    <hr class='my-2'>
                                    <div class="col text-center">
                                        <button class="btn btn-info" onclick="openReviewModal('accommodation', ${place.id})">‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</button>
                                    </div>
                                </div>
                            </div>
                        `).addTo(accommodationLayer); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Layer Group
                    allMarkers.push({ marker, name: place.name, type: '‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å', icon: 'üõåüèª' });
                });
            } else {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å');
            }
        } else {
            alert('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        }
    }

    async function loadKhonKaenGeoJSON() {
        try {
            const res = await fetch('/data/khon_polygon.geojson');
            const data = await res.json();

            let geoJsonLayer = L.geoJSON(data, {
                style: {
                    color: "#E91E63", // ‡∏™‡∏µ‡∏Ç‡∏≠‡∏ö
                    weight: 2,        // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô
                    opacity: 0.8,     // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô
                    fillColor: "#FFC0CB", // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                    fillOpacity: 0.5  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡∏Ç‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                },
                onEachFeature: function (feature, layer) {
                    if (feature.properties && feature.properties.AMP_NAMT) {
                        layer.bindPopup(`<b>‡πÄ‡∏Ç‡∏ï:</b> ${feature.properties.AMP_NAMT}`);
                    }
                }
            });

            khonkaenLayer.addLayer(geoJsonLayer); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Layer Group
        } catch (error) {
            console.error("‡πÇ‡∏´‡∏•‡∏î GeoJSON ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error);
        }
    }
    const searchResults = document.getElementById('searchResults')
    function searchMarker(query) {
        let matchedMarkers = allMarkers.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));
        searchResults.innerHTML = ``
        if (matchedMarkers.length > 0 && query) {
            searchResults.classList.add("show");
            matchedMarkers.forEach((place, index) => {
                const li = document.createElement("li");
                li.classList.add("dropdown-item");
                li.innerHTML = `<strong>${place.icon}${place.name}</strong> - ${place.type}`;
                li.addEventListener("click", function () {
                    if (matchedMarkers[index]) {
                        map.setView(matchedMarkers[index].marker.getLatLng(), 12);
                        matchedMarkers[index].marker.openPopup();
                    }
                });
                searchResults.appendChild(li);
            });
        } else {
            searchResults.innerHTML = ``
            searchResults.classList.remove("show");
        }
    }

    $('#searchBox').on('input', (e) => {
        const query = e.target.value
        searchMarker(query)
    })

    await loadTourism();
    await loadAccommodation();
    await loadKhonKaenGeoJSON();

    Notiflix.Loading.remove();
});
